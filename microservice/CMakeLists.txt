set(MICROSERVICE_NAME msi_genquery2)

add_library(
  ${MICROSERVICE_NAME}
  MODULE
  ${CMAKE_CURRENT_SOURCE_DIR}/src/genquery2.cpp)

target_compile_options(
  ${MICROSERVICE_NAME}
  PRIVATE
  -Wall
  -Wextra
  -Werror)

target_compile_definitions(
  ${MICROSERVICE_NAME}
  PRIVATE
  #${IRODS_COMPILE_DEFINITIONS}
  ${IRODS_COMPILE_DEFINITIONS_PRIVATE}
  IRODS_ENABLE_RE
  IRODS_ENABLE_SYSLOG)

target_include_directories(
  ${MICROSERVICE_NAME}
  PRIVATE
  ${IRODS_INCLUDE_DIRS}
  ${IRODS_EXTERNALS_FULLPATH_BOOST}/include
  ${IRODS_EXTERNALS_FULLPATH_SPDLOG}/include
  ${IRODS_EXTERNALS_FULLPATH_FMT}/include)

target_link_libraries(
  ${MICROSERVICE_NAME}
  PRIVATE
  irods_server)
  #${IRODS_EXTERNALS_FULLPATH_BOOST}/lib/libboost_filesystem.so
  #${IRODS_EXTERNALS_FULLPATH_BOOST}/lib/libboost_system.so
  #${IRODS_EXTERNALS_FULLPATH_FMT}/lib/libfmt.so
  #dl)

install(
  TARGETS ${MICROSERVICE_NAME}
  LIBRARY DESTINATION ${IRODS_PLUGINS_DIRECTORY}/microservices)

#install(
#  FILES ${CMAKE_CURRENT_SOURCE_DIR}/packaging/test_project_template_cpp_microservice.py
#  DESTINATION ${IRODS_HOME_DIRECTORY}/scripts/irods/test
#  PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
#
#install(
#  FILES ${CMAKE_CURRENT_SOURCE_DIR}/packaging/run_project_template_cpp_microservice_test.py
#  DESTINATION ${IRODS_HOME_DIRECTORY}/scripts
#  PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)

#set(PLUGIN_PACKAGE_NAME irods-microservice-${MICROSERVICE_NAME})
#
#include(IrodsCPackCommon)
#
#list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}${IRODS_HOME_DIRECTORY}")
#list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}${IRODS_HOME_DIRECTORY}/scripts")
#list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}${IRODS_HOME_DIRECTORY}/scripts/irods")
#list(APPEND CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}${IRODS_HOME_DIRECTORY}/scripts/irods/test")
#
#set(CPACK_PACKAGE_VERSION ${IRODS_PLUGIN_VERSION})
#set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF)
#set(CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY OFF)
#set(CPACK_COMPONENTS_GROUPING IGNORE)
#set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The integrated Rule-Oriented Data System")
#
#set(CPACK_DEB_COMPONENT_INSTALL OFF)
#set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS OFF)
#set(CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION ON)
#set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_SOURCE_DIR}/packaging/postinst;")
#set(CPACK_DEBIAN_PACKAGE_BREAKS ${PLUGIN_PACKAGE_NAME})
#set(CPACK_DEBIAN_PACKAGE_REPLACES ${PLUGIN_PACKAGE_NAME})
#set(CPACK_DEBIAN_PACKAGE_RELEASE "${IRODS_PACKAGE_REVISION}")
#if (IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME)
#    set(CPACK_DEBIAN_PACKAGE_RELEASE "${CPACK_DEBIAN_PACKAGE_RELEASE}~${IRODS_LINUX_DISTRIBUTION_VERSION_CODENAME}")
#endif()
#set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
#
#set(CPACK_RPM_COMPONENT_INSTALL OFF)
#set(CPACK_RPM_PACKAGE_LICENSE "BSD-3-Clause")
#set(CPACK_RPM_PACKAGE_AUTOREQ 0)
#set(CPACK_RPM_PACKAGE_AUTOPROV 0)
#set(CPACK_RPM_PACKAGE_OBSOLETES ${PLUGIN_PACKAGE_NAME})
#set(CPACK_RPM_POST_INSTALL_SCRIPT_FILE "${CMAKE_SOURCE_DIR}/packaging/postinst")
#set(CPACK_RPM_PACKAGE_RELEASE "${IRODS_PACKAGE_REVISION}")
#set(CPACK_RPM_FILE_NAME RPM-DEFAULT)
#
#set(CPACK_ARCHIVE_COMPONENT_INSTALL OFF)
#
#set(CPACK_DEBIAN_PACKAGE_NAME ${PLUGIN_PACKAGE_NAME})
#set(CPACK_DEBIAN_PACKAGE_DEPENDS "${IRODS_PACKAGE_DEPENDENCIES_STRING}, irods-server (= ${IRODS_VERSION}), irods-runtime (= ${IRODS_VERSION}), libc6")
#
#set(CPACK_RPM_PACKAGE_NAME ${PLUGIN_PACKAGE_NAME})
#if (IRODS_LINUX_DISTRIBUTION_NAME STREQUAL "centos" OR
#    IRODS_LINUX_DISTRIBUTION_NAME STREQUAL "centos linux" OR
#    IRODS_LINUX_DISTRIBUTION_NAME STREQUAL "opensuse")
#    set(CPACK_RPM_PACKAGE_REQUIRES "${IRODS_PACKAGE_DEPENDENCIES_STRING}, irods-server = ${IRODS_VERSION}, irods-runtime = ${IRODS_VERSION}")
#endif()
#
#if (NOT CPACK_GENERATOR)
#    set(CPACK_GENERATOR ${IRODS_CPACK_GENERATOR} CACHE STRING "CPack generator to use, e.g. {DEB, RPM, TGZ}." FORCE)
#    message(STATUS "Setting unspecified CPACK_GENERATOR to ${CPACK_GENERATOR}. This is the correct setting for normal builds.")
#endif()
#
#include(CPack)
